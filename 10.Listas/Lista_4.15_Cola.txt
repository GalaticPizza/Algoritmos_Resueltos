Supóngase que, utilizando una lista encadenada, se implementa una cola Q (estructura 'FIFO', es decir, 'primero en entrar, primero en salir'). Diseñar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la cola está vacía o no.


ListaCola_4.15 es
	
	AMBIENTE

	nodo = registro
		dato: entero
		prox: puntero a nodo
	fr
	p,q,ant,prim: puntero a nodo	
	op: (1,2)
	continuar("s","n")


	PROCEDIMIENTO insertar() es 		//carga encolada
		nuevo(q)
		esc("ingrese valor a insertar:")
		leer(*q.dato)
		si prim = nil entonces
			prim = q
			*q.prox:= nil
		sino
			p:= prim
			mientras p <> nil hacer
				ant:= p
				p:= *p.prox
			fm
			*ant.prox:= q
			*q.prox:= p
		fs
	FP

	PROCEDIMIENTO extraer() es
		si prim = nil entonces
			esc("lista vacia")
		sino
			p:= prim
			esc(*P.dato)
			prim:= *p.prox
			disponer(p)
			esc("elemento extraido")		
		fs
	FP


	PROCESO

	prim:= nil
	repetir
		esc("lista encolada, eliga que desea hacer:");
		esc("1-insertar")
		esc("2-extraer")
		leer(op)
		SEGUN op HACER
			1: insertar()
			2: extraer()
		FS

		esc("desea continuar? s/n:")
		leer(continuar)

	hasta que continuar = "n"
